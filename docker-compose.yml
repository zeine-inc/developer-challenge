version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: marketplace_postgres
    environment:
      POSTGRES_DB: marketplace
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - marketplace_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d marketplace"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (opcional para sess√µes)
  redis:
    image: redis:7-alpine
    container_name: marketplace_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - marketplace_network
    command: redis-server --appendonly yes

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: marketplace_backend
    environment:
      - DATABASE_URL=postgresql://admin:secret123@postgres:5432/marketplace
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - CLOUDINARY_CLOUD_NAME=your-cloud-name
      - CLOUDINARY_API_KEY=your-api-key
      - CLOUDINARY_API_SECRET=your-api-secret
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
      - REDIS_URL=redis://redis:6379
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - marketplace_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: marketplace_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=your-cloud-name
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - marketplace_network
    command: npm run dev

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: marketplace_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - marketplace_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  marketplace_network:
    driver: bridge

# Health checks
x-healthcheck: &healthcheck
  test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s
